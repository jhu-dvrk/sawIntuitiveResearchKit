// -*- Mode: C++; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*-
// ex: set filetype=cpp softtabstop=4 shiftwidth=4 tabstop=4 cindent expandtab:

inline-header {
#include <json/json.h>
#include <sawIntuitiveResearchKit/IO_proxy_configuration.h>
#include <sawIntuitiveResearchKit/IO_configuration.h>
#include <sawIntuitiveResearchKit/arm_proxy_configuration.h>
#include <sawIntuitiveResearchKit/console_configuration.h>
}

class {
    name system_configuration_settings;
    namespace dvrk;
    attribute CISST_EXPORT;

    member {
        name chatty;
        type bool;
        visibility public;
        default false;
    }

    member {
        name path;
        type std::vector<std::string>;
        visibility public;
        default std::vector<std::string>();
    }

    member {
        name audio_volume;
        type double;
        visibility public;
        default 0.5;
    }
}


class {
    name system_configuration;
    namespace dvrk;
    attribute CISST_EXPORT;

    member {
        name component_manager;
        type Json::Value;
        visibility public;
        default Json::Value();
    }

    member {
        name IOs;
        type std::vector<dvrk::IO_proxy_configuration>;
        visibility public;
        default std::vector<dvrk::IO_proxy_configuration>();
    }

    member {
        name ISI_focus_controller;
        type dvrk::IO_configuration;
        visibility public;
        default dvrk::IO_configuration("ISI_focus_controller");
    }

    member {
        name arms;
        type std::vector<dvrk::arm_proxy_configuration>;
        visibility public;
        default std::vector<dvrk::arm_proxy_configuration>();
    }

    member {
        name consoles;
        type std::vector<dvrk::console_configuration>;
        visibility public;
        default std::vector<dvrk::console_configuration>();
    }

    member {
        name settings;
        type dvrk::system_configuration_settings;
        visibility public;
        default dvrk::system_configuration_settings();
    }
}
